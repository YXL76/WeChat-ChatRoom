<template>
  <wxs src="./setting.wxs" module="color" />
  <view class="container setting {{ settings.theme }}">
    <view class="cell title {{ settings.theme }}">主题</view>
    <view class="cell sub themes flex flex-row flex-wrap">
      <block wx:for="{{ themes }}" wx:key="unique">
        <view id="{{ item }}" class="theme {{ item }} {{ item === settings.theme ? 'active' : '' }}" bindtap="changeTheme"></view>
      </block>
    </view>
    <block wx:for="{{ option }}" wx:key="unique">
      <view class="cell title {{ settings.theme }}">{{ item.title }}</view>
      <block wx:for="{{ item.subOptions }}" wx:key="unique">
        <view class="cell sub flex flex-row space-around align-center">
          <view class="title sub {{ settings.theme }}">{{ item.title }}</view>
          <block wx:if="{{ item.type === 'switch' }}">
            <switch id="{{ item.id }}" checked="{{ settings[item.id] }}" color="{{ color.color(settings.theme) }}" bindchange="changeSetting" />
          </block>
          <block wx:elif="{{ item.type === 'input' }}">
            <input id="{{ item.id }}" class="{{ settings.theme }}" maxlength="16" value="{{ settings[item.id] }}" bindinput="changeSetting" />
          </block>
        </view>
      </block>
    </block>
  </view>
</template>

<script>
import { createPage } from '@mpxjs/core'

createPage({

  data: {
    settings: {
      theme: 'Grey',
      systemIn: true,
      systemOut: true,
      systemNum: true,
      anonymous: false,
      anonymousName: '匿名用户^_^'
    },
    themes: ['Grey', 'Blue-Gray', 'White', 'Black', 'Red', 'Pink',
      'Purple', 'Teal', 'Light-Green', 'Yellow', 'Brown'],
    option: [{
      title: '系统消息',
      subOptions: [{
        title: '进入消息',
        id: 'systemIn',
        type: 'switch'
      }, {
        title: '退出消息',
        id: 'systemOut',
        type: 'switch'
      }, {
        title: '人数消息',
        id: 'systemNum',
        type: 'switch'
      }]
    }, {
      title: '匿名',
      subOptions: [{
        title: '启用',
        id: 'anonymous',
        type: 'switch'
      }, {
        title: '昵称',
        id: 'anonymousName',
        type: 'input'
      }]
    }]
  },

  attached () {
    const that = this
    wx.getStorage({
      key: 'theme',
      success (res) { that.setData({ 'settings.theme': res.data }) }
    })
    wx.getStorage({
      key: 'systemIn',
      success (res) { that.setData({ 'settings.systemIn': res.data }) }
    })
    wx.getStorage({
      key: 'systemOut',
      success (res) { that.setData({ 'settings.systemOut': res.data }) }
    })
    wx.getStorage({
      key: 'systemNum',
      success (res) { that.setData({ 'settings.systemNum': res.data }) }
    })
    wx.getStorage({
      key: 'anonymous',
      success (res) { that.setData({ 'settings.anonymous': res.data }) }
    })
    wx.getStorage({
      key: 'anonymousName',
      success (res) { that.setData({ 'settings.anonymousName': res.data }) }
    })
  },

  detached () {
    const that = this
    wx.showLoading({ title: '保存中', mask: true })
    wx.setStorageSync('theme', that.data.settings.theme)
    wx.setStorageSync('systemIn', that.data.settings.systemIn)
    wx.setStorageSync('systemOut', that.data.settings.systemOut)
    wx.setStorageSync('systemNum', that.data.settings.systemNum)
    wx.setStorageSync('anonymous', that.data.settings.anonymous)
    wx.setStorageSync('anonymousName', that.data.settings.anonymousName)
    wx.hideLoading()
  },

  methods: {

    changeTheme (event) {
      this.setData({
        'settings.theme': event.currentTarget.id
      })
    },

    changeSetting (event) {
      this.setData({
        ['settings.' + event.currentTarget.id]: event.detail.value
      })
    }
  }
})
</script>

<style lang="scss" src="../chat.scss"></style>
<style lang="scss" src="./setting.scss"></style>

<script type="application/json">
  {
    "navigationBarTitleText": "聊天室 · 设置"
  }
</script>